services:
  db:
    image: pgvector/pgvector:pg16
    container_name: noesis2_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: noesis2
      POSTGRES_USER: noesis2
      POSTGRES_PASSWORD: noesis2
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: noesis2_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noesis2_web
    command: gunicorn noesis2.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - staticfiles:/app/staticfiles
    env_file:
      - .env
      - .env.docker
    environment:
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-example.com}
      DATABASE_URL: ${COMPOSE_DATABASE_URL:-postgresql://noesis2:noesis2@db:5432/noesis2}
      REDIS_URL: ${COMPOSE_REDIS_URL:-redis://redis:6379/0}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noesis2_worker
    command: celery -A noesis2 worker -l info -Q celery,rag_delete
    env_file:
      - .env
      - .env.docker
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-noesis2.settings.development}
      DATABASE_URL: ${COMPOSE_DATABASE_URL:-postgresql://noesis2:noesis2@db:5432/noesis2}
      REDIS_URL: ${COMPOSE_REDIS_URL:-redis://redis:6379/0}
    depends_on:
      - redis
    restart: unless-stopped

  rag-schema:
    image: postgres:16-alpine
    container_name: noesis2_rag_schema
    # FÃ¼hre das idempotente Schema-SQL gegen Postgres aus
    command: >
      sh -c "
        SCHEMA=${RAG_SCHEMA:-rag}; \
        DIM=${RAG_VECTOR_DIM:-1536}; \
        sed -e 's/{{SCHEMA_NAME}}/'\"$$SCHEMA\"'/g' -e 's/{{VECTOR_DIM}}/'\"$$DIM\"'/g' /app/docs/rag/schema.sql > /tmp/schema.rendered.sql && \
        psql \
          -h db \
          -U ${DB_USER:-noesis2} \
          -d ${DB_NAME:-noesis2} \
          -v ON_ERROR_STOP=1 \
          -f /tmp/schema.rendered.sql
      "
    volumes:
      - .:/app:ro
    env_file:
      - .env
      - .env.docker
    environment:
      # psql nutzt dieses Env-Var als Passwort
      PGPASSWORD: ${DB_PASSWORD:-noesis2}
      RAG_SCHEMA: ${RAG_SCHEMA:-rag}
      RAG_VECTOR_DIM: ${RAG_VECTOR_DIM:-1536}
    depends_on:
      - db
    restart: "no"

  ingestion-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noesis2_ingestion_worker
    command: celery -A noesis2 worker -l info -Q ingestion
    env_file:
      - .env
      - .env.docker
    environment:
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE:-noesis2.settings.development}
      DATABASE_URL: ${COMPOSE_DATABASE_URL:-postgresql://noesis2:noesis2@db:5432/noesis2}
      REDIS_URL: ${COMPOSE_REDIS_URL:-redis://redis:6379/0}
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  staticfiles:
    driver: local
