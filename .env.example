# Copy this file to `.env` and fill in values

# Django settings
SECRET_KEY=change-me-to-a-strong-random-value
DEBUG=true
DJANGO_SETTINGS_MODULE=noesis2.settings.development
# Comma-separated hostnames that may serve the app
ALLOWED_HOSTS=example.com

# PostgreSQL database settings
DB_NAME=noesis2
DB_USER=noesis2
DB_PASSWORD=noesis2
DB_HOST=db
DB_PORT=5432

# Celery (Redis) broker and result backend
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Organization settings
# Currently no organization-specific environment variables are required

# AI Core / LLM infrastructure
# LiteLLM local proxy (see docker-compose.dev.yml)
LITELLM_BASE_URL=http://litellm:4000
LITELLM_MASTER_KEY=dev-master-key
# Client auth for calling LiteLLM (defaults to LITELLM_MASTER_KEY if unset)
LITELLM_API_KEY=dev-master-key
# Preferred for Gemini (Google AI Studio)
GEMINI_API_KEY=your-gemini-api-key
# Optional legacy var sometimes referenced by SDKs/tools
GOOGLE_API_KEY=your-gemini-api-key
LITELLM_SALT_KEY=dev-salt-key
# LiteLLM Proxy DB (Admin UI, keys, spend logs)
# Prefer Postgres for dev/prod; LiteLLM expects DATABASE_URL
LITELLM_DB_NAME=litellm
LITELLM_DATABASE_URL=postgresql://noesis2:noesis2@db:5432/litellm
DATABASE_URL=postgresql://noesis2:noesis2@db:5432/noesis2
REDIS_URL=redis://redis:6379/0
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
AI_CORE_RATE_LIMIT_QUOTA=60
